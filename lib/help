import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

enum BottunState { init, loading }


class VarArguments {
  final String number;

  VarArguments(this.number);
}

class Home extends StatefulWidget {
  const Home({Key? key}) : super(key: key);

  @override
  State<Home> createState() => _HomeState();
}

class _HomeState extends State<Home> {
  String number = '          ';

  String sts = '930595222';

  bool err = false;

  bool isAnimating = false;

  double _width = 400;

  bool duringAnim = false;


  void moveTo() async {
    Future.delayed(const Duration(milliseconds: 600), () {
      Navigator.pushReplacementNamed(context, '/vertify',arguments: VarArguments(number));
    });
    SystemChrome.setSystemUIOverlayStyle(const SystemUiOverlayStyle(
      statusBarColor: Color.fromRGBO(73, 189, 152, 10),
    ));
  }

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      backgroundColor: Colors.white,
      appBar: null,
      body: SafeArea(
        child: Column(
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: const [
                Text(
                  'ادخل رقم الهاتف',
                  style: TextStyle(
                    fontFamily: 'Poppins',
                    fontSize: 30,
                    fontWeight: FontWeight.w900,
                  ),
                ),
              ],
            ),
            const Align(
              alignment: AlignmentDirectional(0.7, 0),
              child: Padding(
                padding: EdgeInsetsDirectional.fromSTEB(0, 40, 0, 0),
                child: Text(
                  'رقم الهاتف الجوال',
                  style: TextStyle(
                    fontFamily: 'Poppins',
                    fontSize: 22,
                    fontWeight: FontWeight.w600,
                  ),
                ),
              ),
            ),
            Padding(
              padding: const EdgeInsetsDirectional.fromSTEB(60, 0, 40, 0),
              child: Row(
                children: [
                  Padding(
                    padding: const EdgeInsetsDirectional.fromSTEB(0, 0, 20, 0),
                    child: Image.asset(
                      'assets/330663.png',
                      width: 35,
                      height: 26,
                      fit: BoxFit.cover,
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsetsDirectional.fromSTEB(0, 5, 0, 0),
                    child: Container(
                        width: 320,
                        height: 40,
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(5),
                          shape: BoxShape.rectangle,
                          border: Border.all(
                            color: const Color.fromRGBO(73, 189, 152, 1),
                            width: 2,
                          ),
                        ),
                        child: Row(
                          children: [
                            err == true
                                ? const Icon(
                                    Icons.error,
                                    color: Colors.red,
                                  )
                                : const Icon(
                                    color: Colors.white,
                                    Icons.access_time_rounded),
                            Padding(
                              padding: const EdgeInsets.fromLTRB(185, 0, 0, 0),
                              child: number[number.length - 1] != ' '
                                  ? Text(
                                      number,
                                      style: const TextStyle(
                                          color: Colors.black, fontSize: 18),
                                    )
                                  : Text(
                                      sts,
                                      style: const TextStyle(
                                          color: Colors.grey, fontSize: 18),
                                    ),
                            )
                          ],
                        )),
                  ),
                ],
              ),
            ),
            const SizedBox(
              height: 330,
            ),
            Expanded(
              child: SingleChildScrollView(
                child: Column(
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        numericInputButton('1'),
                        numericInputButton('2'),
                        numericInputButton('3'),
                      ],
                    ),
                    const SizedBox(
                      height: 20.0,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        numericInputButton('4'),
                        numericInputButton('5'),
                        numericInputButton('6'),
                      ],
                    ),
                    const SizedBox(
                      height: 20.0,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        numericInputButton('7'),
                        numericInputButton('8'),
                        numericInputButton('9'),
                      ],
                    ),
                    const SizedBox(
                      height: 20.0,
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        numericInputButton(''),
                        numericInputButton('0'),
                        backButton(),
                      ],
                    ),
                    Padding(
                        padding: const EdgeInsets.only(
                            bottom: 15.0, left: 8.0, right: 8.0, top: 29.0),
                        child: AnimatedContainer(
                          duration: const Duration(milliseconds: 400),
                          curve: Curves.easeIn,
                          decoration: BoxDecoration(
                            borderRadius: duringAnim == true ? BorderRadius.circular(100) : BorderRadius.circular(15),
                            color: const Color.fromRGBO(73, 189, 152, 1),
                          ),
                          width: _width,
                          height: 50,
                          onEnd: () {
                            setState(() {
                              isAnimating = true;
                              moveTo();
                            });
                          },
                          child: isAnimating
                              ? loading()
                              : TextButton(
                                  onPressed: () {
                                    if (number[0] != ' ' || number[1] != ' ') {
                                      setState(() {
                                        _width = 50;
                                        duringAnim = true;
                                      });
                                    } else {
                                      setState(() {
                                        err = true;
                                      });
                                    }
                                  },
                                  child: const FittedBox(
                                    child: Text(
                                      'التالي',
                                      style: TextStyle(
                                          color: Colors.white,
                                          fontSize: 22,
                                          fontWeight: FontWeight.bold,
                                          letterSpacing: 1.5),
                                    ),
                                  ),
                                ),
                        )),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget loading() {
    return Container(
        width: 30,
        height: 30,
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(100),
        ),
        child: const Center(
          child: CircularProgressIndicator(
            color: Colors.white,
          ),
        ));
  }


  Widget numericInputButton(String value) {
    return ElevatedButton(
      style: ElevatedButton.styleFrom(
        shape: const CircleBorder(),
        foregroundColor: Colors.white,
        side: const BorderSide(color: Colors.white),
        elevation: 0.0,
      ),
      onPressed: () {
        setState(() {
          if (number[0] == ' ') {
            number = number.substring(1);
            number += value;
          }
        });
      },
      child: Container(
        height: 60,
        width: 60,
        alignment: Alignment.center,
        decoration: const BoxDecoration(
          color: Colors.white,
          shape: BoxShape.circle,
        ),
        child: Text(
          value,
          textAlign: TextAlign.center,
          style: const TextStyle(
              fontSize: 25, color: Colors.black, fontWeight: FontWeight.w700),
        ),
      ),
    );
  }

  Widget backButton() {
    return Container(
      height: 60,
      width: 93,
      decoration: const BoxDecoration(
        color: Colors.white,
        shape: BoxShape.circle,
      ),
      child: TextButton(
        onLongPress: () {
          setState(() {
            if (number[number.length - 1] != ' ') {
              number = '          ';
            }
          });
        },
        onPressed: () {
          setState(() {
            if (number[number.length - 1] != ' ') {
              number = number.substring(0, number.length - 1);
              String addd = ' ';
              addd += number;
              number = addd;
            }
          });
        },
        child: const Icon(
          Icons.backspace_sharp,
          size: 30,
          color: Colors.black87,
        ),
      ),
    );
  }
}
